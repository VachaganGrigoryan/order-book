version: "3"

services:
  ui:
    container_name: order-book-ui
    build:
      context: ./ui
      dockerfile: local.Dockerfile
    #      args:
    #        - NEXT_PUBLIC_API_URL=http://0.0.0.0:8000/api
    environment:
      - NEXT_API_URL=http://app:8000/api
      - NEXT_PUBLIC_API_URL=http://0.0.0.0:8000/api
      - NEXTAUTH_SECRET=LQQpkRrIgFiZssavrg8YL+5Ho8B26D3/N4Wzq/SOj5c=
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      - ./ui/src:/app/src
      - ./ui/public:/app/public
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - app

  db:
    image: postgres
    environment:
      POSTGRES_DB: order-book
      POSTGRES_USER: vachagan
      POSTGRES_PASSWORD: vachagan
    #    command: 'postgres -c log_statement=all'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  app:
    container_name: order-book-api
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENV=local
      - HOST_URL=0.0.0.0
      - HOST_PORT=8000
      #      - SECRET_KEY=t8^50(05m1pfn_#z4^%cczk=9jh$8_ie2p-)-4p6(+3f&)l)&l
      - DEBUG=True
      - USE_SQLITE=False
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=order-book
      - POSTGRES_USER=vachagan
      - POSTGRES_PASSWORD=vachagan
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    depends_on:
      - db

volumes:
  postgres_data: